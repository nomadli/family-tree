{"version":3,"sources":["components/Switch/index.js","components/MixedNodeElement.js","components/Card.js","components/PureSvgNodeElement.js","utils/TreeConverter.js","components/Editor.js","components/Viewer.js","App.js","index.js"],"names":["Input","this","props","variable","name","onChange","checked","className","type","id","htmlFor","Component","MixedNodeElement","nodeData","triggerNodeToggle","foreignObjectProps","Fragment","r","style","display","flexDirection","alignItems","border","paddingBottom","backgroundColor","listStyleType","padding","attributes","Object","keys","map","labelKey","i","key","children","textAlign","onClick","__rd3t","collapsed","cardStyle","width","height","rx","ry","fill","stroke","clipPath","strokeWidth","fontSize","textAnchor","Card","nodeDatum","lorx","cy","left","lines","biography","trim","split","gradientTransform","offset","stopColor","cx","x","y","image","href","process","birthday","death","female","entries","str","idx","g_TouchDev","window","navigator","maxTouchPoints","msMaxTouchPoints","Family","tipView","curID","nameNode","node","bgcolor","transform","imageNode","touchUpAction","ev","stopPropagation","setID","touchDownAction","toggleNode","actions","touch","onPointerDown","onPointerUp","mouse","onMouseEnter","onMouseLeave","ptouch","partner","pmouse","React","PureSvgNodeElement","bfs","idRegex","parentIdRegex","extract","ancestryEntry","entryData","Error","val","parseAncestryEntry","length","line","forEach","def","join","match","matches","parentId","data","parseAncestryNotation","text","nodeMap","replace","filter","entry","tree","values","push","printAncestryEntry","attr","frontier","shift","child","childI","customNodeFnMapping","svg","description","fn","rd3tProps","appState","orientation","mixed","nodeSize","getEditDataFileLink","location","owner","projectPath","Editor","toggleCollapseNeighborNodes","handleConfigChange","prevState","shouldCollapseNeighborNodes","state","proposedAncestry","ancestryParsingError","bind","setTitle","setOrientation","setPathFunc","handleChange","handleStringChange","handleFloatChange","toggleCollapsible","toggleZoomable","setScaleExtent","setSeparation","setNodeSize","toggleLegacyTransitions","onDataChange","configurations","notation","setState","e","message","title","pathFunc","evt","target","parsedIntValue","parseInt","value","undefined","isNaN","parsedFloatValue","parseFloat","collapsible","zoomable","scaleExtent","separation","siblings","nonSiblings","enableLegacyTransitions","version","rel","clipboard","writeText","JSON","stringify","color","margin","event","tryUpdateAncestry","Switch","translateX","translateY","initialDepth","defaultValue","depthFactor","zoom","min","max","transitionDuration","configs","MyTree","Tree","collapseNode","Viewer","setTipState","tipID","dimensions","treeContainer","getBoundingClientRect","countNodes","count","n","reduce","sum","Array","isArray","ref","tc","renderCustomNodeElement","translate","styles","App","editMode","toggleEditMode","newData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d58ab628.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react';\nimport './styles.css';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    variable: PropTypes.object\n  };\n\n  render() {\n    const { variable, name, onChange, checked } = this.props;\n    return (\n      <div className='onoffswitch'>\n        <input type='checkbox' className='onoffswitch-checkbox' id={name} name={name}\n          onChange={onChange} checked={checked} {...variable} />\n        <label className='onoffswitch-label' htmlFor={name}>\n          <span className='onoffswitch-inner' />\n          <span className='onoffswitch-switch' />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Input;","import React from 'react';\n\nconst MixedNodeElement = ({ nodeData = {}, triggerNodeToggle, foreignObjectProps = {} }) => {\n  return (\n    <React.Fragment>\n      <circle r={20}></circle>\n      <foreignObject {...foreignObjectProps}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: '1px solid black',\n            paddingBottom: '1rem',\n            backgroundColor: 'rgb(248, 248, 255)', // ghostwhite\n          }}\n        >\n          <h3>{nodeData.name}</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {nodeData.attributes &&\n              Object.keys(nodeData.attributes).map((labelKey, i) => (\n                <li key={`${labelKey}-${i}`}>\n                  {labelKey}: {nodeData.attributes[labelKey]}\n                </li>\n              ))}\n          </ul>\n          {nodeData.children && (\n            <button style={{ textAlign: 'center' }} onClick={triggerNodeToggle}>\n              {nodeData.__rd3t.collapsed ? '⬅️ ➡️ Expand' : '➡️ ⬅️ Collapse'}\n            </button>\n          )}\n        </div>\n      </foreignObject>\n    </React.Fragment>\n  );\n};\n\nexport default MixedNodeElement;\n","import React from 'react';\n\n//font-family=\"Roboto-Bold, Roboto\" font-size=\"8\" inline-size=\"50\"\nconst cardStyle = {\n  border: {\n    width: 300,\n    height: 200,\n    rx: 12,\n    ry: 12,\n    fill: 'url(#bgc)',\n    stroke: 'url(#bgc)',\n  },\n  imgBG:{\n    r: 50,\n    fill: 'white',\n    stroke: 'white'\n  },\n  img: {\n    clipPath: 'url(#iconc)',\n    height: 100,\n    width: 100,\n  },\n  lable: {\n    fill: '#FFFFFF',\n    stroke: '#FFFFFF',\n    strokeWidth: 1,\n    fontSize: 14,\n    textAnchor: \"start\",\n  },\n  info: {\n    fill: '#FFFFFF',\n    stroke: '#FFFFFF',\n    strokeWidth: 1,\n    fontSize: 14,\n    textAnchor: \"start\",\n  },\n};\n\nconst Card = ({ nodeDatum, lorx, cy, left }) => {\n  let lines = null;\n  if (nodeDatum.biography) {\n    lines = nodeDatum.biography.trim().split('\\n');\n  }\n\n  if (!left) {\n    lorx = lorx - 300\n  }\n  \n  return (\n    <React.Fragment>\n      <defs>\n        <linearGradient id=\"bgc\" gradientTransform=\"rotate(45)\">\n          <stop offset=\"0%\" stopColor=\"rgb(16, 24, 40)\" />\n          <stop offset=\"100%\" stopColor=\"rgb(71, 84, 103)\" />\n        </linearGradient>\n        <clipPath id=\"iconc\">\n          <circle cx={56+lorx} cy={cy} r=\"50\"/>\n        </clipPath>\n      </defs>\n      <rect {...cardStyle.border} x={lorx} y={-100+cy}/>\n      <circle {...cardStyle.imgBG} cx={56+lorx} cy={cy}></circle>\n      {nodeDatum.image ?\n        <image {...cardStyle.img} x={6+lorx} y={-50+cy} href={`${process.env.PUBLIC_URL}/img/${nodeDatum.image}`} /> :\n        <></>\n      }\n\n      <text x={110+lorx} y={-80+cy} {...cardStyle.lable}>姓名:</text>\n      <text x={150+lorx} y={-80+cy} {...cardStyle.info}>{nodeDatum.name}</text>\n\n      <text x={110+lorx} y={-60+cy} {...cardStyle.lable}>生辰:</text>\n      <text x={150+lorx} y={-60+cy} {...cardStyle.info}>{nodeDatum.birthday}</text>\n\n      <text x={110+lorx} y={-40+cy} {...cardStyle.lable}>仙逝:</text>\n      <text x={150+lorx} y={-40+cy} {...cardStyle.info}>{nodeDatum.death}</text>\n\n      <text x={110+lorx} y={-20+cy} {...cardStyle.lable}>性别:</text>\n      <text x={150+lorx} y={-20+cy} {...cardStyle.info}>{nodeDatum.female ? \"女\" : \"男\"}</text>\n\n      {lines &&\n        Object.entries(lines).map((str, idx) => (\n          idx >= 5 ?\n            <text key={idx} y={14 * idx} x={10+lorx} {...cardStyle.info} fontSize={12}>{str[1]}</text>:\n            <text key={idx} y={14 * idx} x={120+lorx} {...cardStyle.info} fontSize={12}>{str[1]}</text>\n        ))\n      };\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst g_TouchDev = 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n\nclass Family extends React.Component {\n  constructor(props) {\n    super(props);\n    this.actions = {\n      touch: {\n        onPointerDown: (ev) => this.touchDownAction(this.props.node, this.props.curID, this.props.toggleNode, this.props.setID, ev),\n        onPointerUp: (ev) => this.touchUpAction(this.props.node, this.props.curID, ev),\n      },\n      mouse: {\n        onClick: this.props.toggleNode,\n        onMouseEnter: () => this.props.setID(this.props.node.id),\n        onMouseLeave: () => this.props.setID(0),\n      },\n      ptouch: {\n        onPointerDown: (ev) => this.touchDownAction(this.props.node.partner, this.props.curID, this.props.toggleNode, this.props.setID, ev),\n        onPointerUp: (ev) => this.touchUpAction(this.props.node.partner, this.props.curID, ev),\n      },\n      pmouse: {\n        onClick: this.props.toggleNode,\n        onMouseEnter: () => this.props.setID(this.props.node.partner.id),\n        onMouseLeave: () => this.props.setID(0),\n      }\n    };\n  }\n  tipView = (curID, nodeDatum, lorx, cy, left) => {\n    if (curID !== nodeDatum.id && curID !== -nodeDatum.id) {\n      return (<></>);\n    }\n    return (\n      <Card nodeDatum={nodeDatum} lorx={lorx} cy={cy} left={left} />\n    );\n  };\n\n  nameNode = (node, bgcolor, transform) => {\n    return (\n      <React.Fragment>\n        <circle cx={transform.x} cy={transform.y} r={50} fill={bgcolor} stroke={bgcolor} />\n        <g className=\"rd3t-label\">\n          <text className=\"rd3t-label__title\" x={transform.x} y={5 + transform.y} textAnchor=\"middle\">\n            {node.name}\n          </text>\n        </g>\n      </React.Fragment>\n    );\n  };\n\n  imageNode = (node, bgcolor, transform) => {\n    return (\n      <React.Fragment>\n        <defs>\n          <clipPath id={node.id}>\n            <circle cx={transform.x} cy={transform.y} r={50} />\n          </clipPath>\n        </defs>\n\n        <circle cx={transform.x} cy={transform.y} r={50} fill={\"transparent\"} stroke={bgcolor} />\n        <image href={`${process.env.PUBLIC_URL}/img/${node.image}`} x={-50 + transform.x} y={-50 + transform.y} height={100} width={100} clipPath={`url(#${node.id})`} />\n        <g className=\"rd3t-label\">\n          <text className=\"rd3t-label__title\" x={transform.x} y={-60+transform.y} textAnchor=\"middle\">\n            {node.name}\n          </text>\n        </g>\n      </React.Fragment>\n    );\n  }\n\n  touchUpAction = (node, curID, ev) => {\n    ev.stopPropagation();\n    if (curID !== 0) {\n      this.props.setID(-node.id);\n    } \n  }\n\n  touchDownAction = (node, curID, toggleNode, setID, ev) => {\n    ev.stopPropagation();\n    if (-node.id === curID) {\n      setID(0)\n      toggleNode(ev)\n      return\n    }\n    setID(node.id)\n  }\n\n  render() {\n    let { node, curID, bgcolor } = this.props;\n    if (!node.partner) {\n      return (\n        <g {...this.actions[g_TouchDev ? 'touch' : 'mouse']}>\n          {node.image ?\n            this.imageNode(node, bgcolor, { x: 0, y: 0 }) :\n            this.nameNode(node, bgcolor, { x: 0, y: 0 })\n          }\n          {this.tipView(curID, node, 60, 0, true)}\n        </g>\n      );\n    }\n    return (\n      <React.Fragment>\n        <g {...this.actions[g_TouchDev ? 'touch' : 'mouse']}>\n          {node.image ?\n            this.imageNode(node, bgcolor, { x: 0, y: 0 }) :\n            this.nameNode(node, bgcolor, { x: 0, y: 0 })\n          }\n          {this.tipView(curID, node, -60, 0, false)}\n        </g>\n        <g {...this.actions[g_TouchDev ? 'ptouch' : 'pmouse']}>\n          {node.partner.image ?\n            this.imageNode(node.partner, bgcolor, { x: 105, y: 0 }) :\n            this.nameNode(node.partner, bgcolor, { x: 105, y: 0 })\n          }\n          {this.tipView(curID, node.partner, 160, 0, true)}\n        </g>\n      </React.Fragment>\n    );\n  };\n};\n\nconst PureSvgNodeElement = ({ nodeDatum, toggleNode, setID, curID }) => {\n  let props = {\n    bgcolor: \"#6A9956\",\n    node: nodeDatum,\n    toggleNode: toggleNode,\n    setID: setID,\n    curID: curID,\n  };\n\n  if (nodeDatum.death) {\n    props.bgcolor = \"#8B8B8B\";\n  }\n\n  return <Family {...props} />;\n};\n\nexport default PureSvgNodeElement;\n","const idRegex = /^1(\\.[1-9][0-9]*)*$/;\nconst parentIdRegex = /^(1(\\.[1-9][0-9]*)*)\\.[1-9][0-9]*$/;\n\nfunction extract(ancestryEntry, entryData, key) {\n  if (!(key in entryData))\n    throw Error(`Entry:\n\n${ancestryEntry}\n\nmust have a '${key}' defined`);\n  const val = entryData[key];\n  delete entryData[key];\n  return val;\n}\n\nfunction parseAncestryEntry(ancestryEntry) {\n  if (ancestryEntry.trim().length === 0)\n    return null;\n\n  const entryData = {};\n  const lines = ancestryEntry.trim().split('\\n');\n\n  if (lines.length === 0)\n    return null;\n\n  lines\n    .map(line => line.split('='))\n    .forEach(def => {\n      if (def.length !== 2)\n        throw Error(`Malformed line \"${def.join('=')}\" in entry:\n\n${ancestryEntry}\n\nThe expected format is: property=value`);\n      if (def[0] in entryData)\n        throw Error(`Entry:\n\n${ancestryEntry}\n\nhas a duplicate property ${def[0]}'`);\n      entryData[def[0]] = (def[1] || '').trim();\n    });\n  const id = extract(ancestryEntry, entryData, 'id');\n  const name = extract(ancestryEntry, entryData, 'name');\n  if (!id.match(idRegex))\n    throw Error(`id must match pattern \"${idRegex}\" (eg: 1.2.1),\nbut instead ${id} was found`);\n  const matches = id.match(parentIdRegex);\n  const parentId = (matches && matches.length > 1) ? matches[1] : null;\n  return {id, parentId, data: {name, attributes: entryData, children: []}};\n}\n\nexport function parseAncestryNotation(text) {\n  const nodeMap = {};\n  text.replace('\\r', '')\n    .split('\\n\\n')\n    .map(parseAncestryEntry)\n    .filter(entry => entry != null)\n    .forEach(entry => {\n      if (entry.id in nodeMap)\n        throw Error(`Duplicate id found: ${entry.id}`);\n      nodeMap[entry.id] = entry;\n    });\n  let tree = null;\n  Object.values(nodeMap)\n    .forEach(entry => {\n      if (entry.parentId) {\n        if (!(entry.parentId in nodeMap))\n          throw Error(`Found an entry with 'id=${entry.id}' but no parent exists with 'id=${entry.parentId}'`);\n        nodeMap[entry.parentId].data.children.push(entry.data);\n      } else {\n        if (entry.id !== '1')\n          throw Error(`The original ancestor must have an id=1 .\n          All other entries must be descendents (eg. 1.1, 1.2, 1.2.1, etc).\n          But an entry was found with 'id=${entry.id}'`);\n        tree = entry.data;\n      }\n    });\n\n  Object.values(nodeMap)\n    .filter(entry => entry.data.children.length === 0)\n    .forEach(entry => entry.data.children = null);\n\n  if (tree === null)\n    throw Error('At least one entry must exist with id=1 to represent the original ancestor.');\n  return tree;\n}\n\nfunction printAncestryEntry(entry) {\n  return `id=${entry.id}\nname=${entry.node.name}\n${entry.node.attributes ? Object.entries(entry.node.attributes)\n    .map(attr => attr.join('=') + '\\n')\n    .join('') : ''}`;\n}\n\nfunction* bfs(tree) {\n  const frontier = [{id: '1', node: tree}];\n  while (frontier.length > 0) {\n    const entry = frontier.shift();\n    yield entry;\n    if (entry.node.children) {\n      entry.node.children.forEach((child, childI) => {\n        frontier.push({id: `${entry.id}.${childI + 1}`, node: child});\n      });\n    }\n  }\n}\n\nexport function printAncestryNotation(tree) {\n  return [...bfs(tree)].map(printAncestryEntry).join('\\n');\n}\n","import React, {Component} from 'react';\nimport {version} from '../../package.json';\nimport Switch from './Switch';\nimport MixedNodeElement from './MixedNodeElement';\nimport PureSvgNodeElement from './PureSvgNodeElement';\nimport '../App.css';\nimport {parseAncestryNotation, printAncestryNotation} from '../utils/TreeConverter';\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\n\nconst customNodeFnMapping = {\n  svg: {\n    description: 'Default - Pure SVG node & label (IE11 compatible)',\n    fn: (rd3tProps, appState) => (\n      <PureSvgNodeElement\n        nodeDatum={rd3tProps.nodeDatum}\n        toggleNode={rd3tProps.toggleNode}\n        orientation={appState.orientation}\n      />\n    ),\n  },\n  mixed: {\n    description: 'MixedNodeElement - SVG `circle` + `foreignObject` label',\n    fn: ({nodeDatum, toggleNode}, appState) => (\n      <MixedNodeElement\n        nodeData={nodeDatum}\n        triggerNodeToggle={toggleNode}\n        foreignObjectProps={{\n          width: appState.nodeSize.x,\n          height: appState.nodeSize.y,\n          x: -50,\n          y: 50,\n        }}\n      />\n    ),\n  },\n};\n\nfunction getEditDataFileLink() {\n  const matches = window.location.href.match(/https:\\/\\/(.*)\\.github.io\\/(.*)\\//);\n  if (!matches || matches.length < 3) {\n    return 'https://github.com/nomadli/family-tree/edit/master/src/data/data.json';\n  }\n  const owner = matches[1];\n  const projectPath = matches[2];\n  return `https://github.com/${owner}/${projectPath}/edit/master/src/data/data.json`;\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proposedAncestry: printAncestryNotation(props.data.tree),\n      ancestryParsingError: null,\n    };\n\n    this.handleConfigChange = this.handleConfigChange.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.setOrientation = this.setOrientation.bind(this);\n    this.setPathFunc = this.setPathFunc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStringChange = this.handleStringChange.bind(this);\n    this.handleFloatChange = this.handleFloatChange.bind(this);\n    this.toggleCollapsible = this.toggleCollapsible.bind(this);\n    this.toggleZoomable = this.toggleZoomable.bind(this);\n    this.setScaleExtent = this.setScaleExtent.bind(this);\n    this.setSeparation = this.setSeparation.bind(this);\n    this.setNodeSize = this.setNodeSize.bind(this);\n    this.toggleLegacyTransitions = this.toggleLegacyTransitions.bind(this);\n  }\n\n  handleConfigChange(state) {\n    if (!this.props.onDataChange)\n      return;\n    if (typeof state === 'function') {\n      state = state(this.props.data.configurations);\n    }\n    this.props.onDataChange({\n      tree: this.props.data.tree,\n      configurations: {...this.props.data.configurations, ...state}\n    });\n  }\n\n  tryUpdateAncestry(notation) {\n    this.setState({proposedAncestry: notation});\n    try {\n      this.setState({\n        ancestryParsingError: null\n      });\n      this.props.onDataChange({\n        tree: parseAncestryNotation(notation),\n        configurations: this.props.data.configurations\n      });\n    } catch (e) {\n      this.setState({ancestryParsingError: e.message});\n    }\n  }\n\n  setTitle(title) {\n    this.handleConfigChange({title});\n  }\n\n  setOrientation(orientation) {\n    this.handleConfigChange({orientation});\n  }\n\n  setPathFunc(pathFunc) {\n    this.handleConfigChange({pathFunc});\n  }\n\n  handleChange(evt) {\n    const target = evt.target;\n    const parsedIntValue = parseInt(target.value, 10);\n    if (target.value === '') {\n      this.handleConfigChange({\n        [target.name]: undefined,\n      });\n    } else if (!isNaN(parsedIntValue)) {\n      this.handleConfigChange({\n        [target.name]: parsedIntValue,\n      });\n    }\n  }\n\n  handleStringChange(evt) {\n    const {name, value} = evt.target;\n    if (value === '') {\n      this.handleConfigChange({\n        [name]: undefined,\n      });\n    } else {\n      this.handleConfigChange({\n        [name]: value,\n      });\n    }\n  }\n\n  handleFloatChange(evt) {\n    const target = evt.target;\n    const parsedFloatValue = parseFloat(target.value);\n    if (target.value === '') {\n      this.handleConfigChange({\n        [target.name]: undefined,\n      });\n    } else if (!isNaN(parsedFloatValue)) {\n      this.handleConfigChange({\n        [target.name]: parsedFloatValue,\n      });\n    }\n  }\n\n  toggleCollapsible() {\n    this.handleConfigChange(prevState => ({collapsible: !prevState.collapsible}));\n  }\n\n  toggleCollapseNeighborNodes = () => {\n    this.handleConfigChange(prevState => ({\n      shouldCollapseNeighborNodes: !prevState.shouldCollapseNeighborNodes,\n    }));\n  };\n\n  toggleZoomable() {\n    this.handleConfigChange(prevState => ({zoomable: !prevState.zoomable}));\n  }\n\n  setScaleExtent(scaleExtent) {\n    this.handleConfigChange({scaleExtent});\n  }\n\n  setSeparation(separation) {\n    if (!isNaN(separation.siblings) && !isNaN(separation.nonSiblings)) {\n      this.handleConfigChange({separation});\n    }\n  }\n\n  setNodeSize(nodeSize) {\n    if (!isNaN(nodeSize.x) && !isNaN(nodeSize.y)) {\n      this.handleConfigChange({nodeSize});\n    }\n  }\n\n  toggleLegacyTransitions() {\n    this.handleConfigChange(prevState => ({\n      enableLegacyTransitions: !prevState.enableLegacyTransitions,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"column-left flex-container-vertical\">\n        <h2 className=\"title flex-conservative\">李强的族谱 v{version}</h2>\n\n        <Tabs className=\"controls-container flex-container-vertical flex-greedy\">\n          <TabList className=\"flex-conservative\">\n            <Tab>Save / Export</Tab>\n            <Tab>Ancestry</Tab>\n            <Tab>Configurations</Tab>\n          </TabList>\n          <TabPanel className=\"controls-container\">\n            <div className=\"prop-container\">\n              Save your changes to avoid loosing your data.<br/>\n              <h5>Steps to save your changes</h5>\n              <ol>\n                <li>Copy all your changes using the 'Copy Tree & Configurations' button below</li>\n                <li>Open your <a\n                  href={getEditDataFileLink()}\n                  target='_blank'\n                  rel='noopener noreferrer'>data file</a> and\n                  paste your changes there.<br/>\n                  Finally, hit the 'Commit changes' button at the bottom.\n                </li>\n                <li>If all goes well, your changes should reflect in a few minutes once you refresh the page.</li>\n              </ol>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-block\"\n                onClick={() => navigator.clipboard.writeText(JSON.stringify(this.props.data, null, 2))}\n              >\n                {'Copy Tree & Configurations'}\n              </button>\n            </div>\n          </TabPanel>\n          <TabPanel className=\"controls-container flex-container-vertical flex-greedy\">\n            {this.state.ancestryParsingError &&\n            <pre className=\"flex-conservative\" style={{color: 'red',}}>{this.state.ancestryParsingError}</pre>}\n            <textarea className=\"flex-greedy\"\n                      style={{width: '100%', margin: '4px', color: this.state.ancestryParsingError ? 'red' : 'black'}}\n                      value={this.state.proposedAncestry}\n                      onChange={(event) => this.tryUpdateAncestry(event.target.value)}/>\n          </TabPanel>\n          <TabPanel className=\"controls-container\">\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Title</h4>\n              <input\n                type=\"text\"\n                value={this.props.data.configurations.title}\n                onChange={(event) => this.setTitle(event.target.value)}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Orientation</h4>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setOrientation('horizontal')}\n              >\n                {'Horizontal'}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setOrientation('vertical')}\n              >\n                {'Vertical'}\n              </button>\n            </div>\n\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Path Function</h4>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setPathFunc('diagonal')}\n              >\n                {'Diagonal'}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setPathFunc('elbow')}\n              >\n                {'Elbow'}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setPathFunc('straight')}\n              >\n                {'Straight'}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-controls btn-block\"\n                onClick={() => this.setPathFunc('step')}\n              >\n                {'Step'}\n              </button>\n            </div>\n\n            <div className=\"prop-container\">\n              <label className=\"prop\" htmlFor=\"customNodeElement\">\n                Custom Node Element\n              </label>\n              <select className=\"form-control\" name=\"renderCustomNodeElement\" onChange={this.handleStringChange}>\n                {Object.entries(customNodeFnMapping).map(([key, {description}]) => (\n                  <option key={key} value={key}>\n                    {description}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Collapsible</h4>\n              <Switch\n                name=\"collapsibleBtn\"\n                checked={this.props.data.configurations.collapsible}\n                onChange={this.toggleCollapsible}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Collapse neighbor nodes</h4>\n              <Switch\n                name=\"collapseNeighborsBtn\"\n                checked={this.props.data.configurations.shouldCollapseNeighborNodes}\n                onChange={this.toggleCollapseNeighborNodes}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <h4 className=\"prop\">Enable Legacy Transitions</h4>\n              <Switch\n                name=\"enableLegacyTransitionsBtn\"\n                checked={this.props.data.configurations.enableLegacyTransitions}\n                onChange={this.toggleLegacyTransitions}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <div>\n                <label className=\"prop\" htmlFor=\"translateX\">\n                  Translate X\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"translateX\"\n                  type=\"number\"\n                  value={this.props.data.configurations.translateX}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <label className=\"prop\" htmlFor=\"translateY\">\n                  Translate Y\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"translateY\"\n                  type=\"number\"\n                  value={this.props.data.configurations.translateY}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"prop-container\">\n              <label className=\"prop\" htmlFor=\"initialDepth\">\n                Initial Depth\n              </label>\n              <input\n                className=\"form-control\"\n                style={{color: 'grey'}}\n                name=\"initialDepth\"\n                type=\"text\"\n                value={this.props.data.configurations.initialDepth}\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <label className=\"prop\" htmlFor=\"depthFactor\">\n                Depth Factor\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"depthFactor\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.depthFactor}\n                onChange={this.handleChange}\n              />\n            </div>\n\n            {/* <div className=\"prop-container prop\">{`Zoomable: ${this.state.zoomable}`}</div> */}\n\n            <div className=\"prop-container\">\n              <label className=\"prop\" htmlFor=\"zoom\">\n                Zoom\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"zoom\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.zoom}\n                onChange={this.handleFloatChange}\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <span className=\"prop prop-large\">Scale Extent</span>\n              <label className=\"sub-prop\" htmlFor=\"scaleExtentMin\">\n                Min\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"scaleExtentMin\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.scaleExtent.min}\n                onChange={evt =>\n                  this.setScaleExtent({\n                    min: parseFloat(evt.target.value),\n                    max: this.props.data.configurations.scaleExtent.max,\n                  })\n                }\n              />\n              <label className=\"sub-prop\" htmlFor=\"scaleExtentMax\">\n                Max\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"scaleExtentMax\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.scaleExtent.max}\n                onChange={evt =>\n                  this.setScaleExtent({\n                    min: this.props.data.configurations.scaleExtent.min,\n                    max: parseFloat(evt.target.value),\n                  })\n                }\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <span className=\"prop prop-large\">Node separation</span>\n              <label className=\"sub-prop\" htmlFor=\"separationSiblings\">\n                Siblings\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"separationSiblings\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.separation.siblings}\n                onChange={evt =>\n                  this.setSeparation({\n                    siblings: parseFloat(evt.target.value),\n                    nonSiblings: this.props.data.configurations.separation.nonSiblings,\n                  })\n                }\n              />\n              <label className=\"sub-prop\" htmlFor=\"separationNonSiblings\">\n                Non-Siblings\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"separationNonSiblings\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.separation.nonSiblings}\n                onChange={evt =>\n                  this.setSeparation({\n                    siblings: this.props.data.configurations.separation.siblings,\n                    nonSiblings: parseFloat(evt.target.value),\n                  })\n                }\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <span className=\"prop prop-large\">Node size</span>\n              <label className=\"sub-prop\" htmlFor=\"nodeSizeX\">\n                X\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"nodeSizeX\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.nodeSize.x}\n                onChange={evt =>\n                  this.setNodeSize({x: parseFloat(evt.target.value), y: this.props.data.configurations.nodeSize.y})\n                }\n              />\n              <label className=\"sub-prop\" htmlFor=\"nodeSizeY\">\n                Y\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"nodeSizeY\"\n                type=\"number\"\n                defaultValue={this.props.data.configurations.nodeSize.y}\n                onChange={evt =>\n                  this.setNodeSize({x: this.props.data.configurations.nodeSize.x, y: parseFloat(evt.target.value)})\n                }\n              />\n            </div>\n\n            <div className=\"prop-container\">\n              <label className=\"prop\" htmlFor=\"transitionDuration\">\n                Transition Duration\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"transitionDuration\"\n                type=\"number\"\n                value={this.props.data.configurations.transitionDuration}\n                onChange={this.handleChange}\n              />\n            </div>\n          </TabPanel>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import React, { Component } from 'react';\nimport Tree from 'react-d3-tree';\nimport MixedNodeElement from './MixedNodeElement';\nimport PureSvgNodeElement from './PureSvgNodeElement';\nimport '../App.css';\n\n/*\ntree props:\ndata:                     树的数据对象\nzoomable:                 指定是否允许缩放树\ntranslate:                指定树的偏移量,格式为{ x: number, y: number }\norientation:              指定树的方向,可以是\"horizontal\"或\"vertical\"\nseparation:               指定相邻节点之间的距离，可以是一个数值或一个函数\nnodeSize:                 指定每个节点的大小,可以是一个数值或一个函数\npathFunc:                 指定绘制节点之间连线的函数\ndepthFactor:              指定节点深度的因素,用于计算节点之间的距离\ncollapsible:              指定是否允许折叠节点\nonClick:                  指定节点的点击事件处理函数\nonCollapse:               指定节点折叠事件处理函数\nonExpand:                 指定节点展开事件处理函数\nrenderCustomNodeElement:  指定自定义节点元素的渲染函数\n\nNode props:\nnodeData:                 节点的数据对象\nclassNames:               节点的 CSS 类名\ntextLayout:               指定节点标签的布局,可以是\"horizontal\"或\"vertical\"\ncircleRadius:             指定节点圆圈的半径\nnodeSvgShape:             指定节点形状的 SVG 路径\nforeignObjectProps:       指定包含节点标签的 foreignObject 元素的 props\nnodeLabelComponent:       指定节点标签的渲染函数\nonClick:                  指定节点的点击事件处理函数\nonRightClick:             指定节点的右键点击事件处理函数\nonCollapse:               指定节点折叠事件处理函数\nonExpand:                 指定节点展开事件处理函数\n\nLink props:\nlinkData:                 连接两个节点的数据对象\norientation:              指定树的方向, 可以是\"horizontal\"或\"vertical\"\npathFunc:                 指定绘制连线的函数\ntransitionDuration:       指定连线动画的持续时间\n\nrenderCustomNodeElement props:\ndatum:                    当前节点的数据对象,由Tree组件传递给Node组件\ntoggleNode:               展开或收起节点的方法,shouldCollapseNeighborNodes=true有效\ncollapsed:                表示当前节点是否已经折叠\nnodeProps:                所有应该传递给节点的自定义属性都包含在这个对象中\nmouseEvent:               包含当前鼠标事件的对象,可以用于处理鼠标事件\n*/\n\nconst countNodes = (count = 0, n) => {\n  // Count the current node\n  if (n.partner) {\n    count += 2;\n  } else {\n    count += 1;\n  }\n\n  // Base case: reached a leaf node.\n  if (!n.children) {\n    return count;\n  }\n\n  // Keep traversing children while updating `count` until we reach the base case.\n  return n.children.reduce((sum, child) => countNodes(sum, child), count);\n};\n\nconst customNodeFnMapping = {\n  svg: {\n    description: 'Default - Pure SVG node & label (IE11 compatible)',\n    fn: (rd3tProps, configs, setID, curID) => (\n      <PureSvgNodeElement\n        nodeDatum={rd3tProps.nodeDatum}\n        toggleNode={rd3tProps.toggleNode}\n        setID = {setID}\n        curID = {curID}\n      />\n    ),\n  },\n  mixed: {\n    description: 'MixedNodeElement - SVG `circle` + `foreignObject` label',\n    fn: ({ nodeDatum, toggleNode }, configs) => (\n      <MixedNodeElement\n        nodeData={nodeDatum}\n        triggerNodeToggle={toggleNode}\n        foreignObjectProps={{\n          width: configs.nodeSize.x,\n          height: configs.nodeSize.y,\n          x: -50,\n          y: 50,\n        }}\n      />\n    ),\n  },\n};\n\nclass MyTree extends Tree {\n  constructor(props) {\n    super(props);\n    Tree.collapseNode = function (nodeDatum) {\n      nodeDatum.__rd3t.collapsed = true;\n    };\n  }\n  \n  render() {\n    return super.render()\n  }\n}\n\nclass Viewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      translateX: props.configurations.translateX,\n      translateY: props.configurations.translateY,\n      tipID: 0,\n    };\n  }\n\n  componentDidMount() {\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      translateX: dimensions.width / 2.5,\n      translateY: dimensions.height / 2,\n    });\n  }\n\n  setTipState = (id) => {\n    this.setState({tipID:id})\n  }\n\n  render() {\n    const { tree, configurations } = this.props;\n    return (\n      <div className=\"column-right\">\n        <div className=\"tree-stats-container\">\n          <h2>{configurations.title}</h2>\n          {countNodes(0, Array.isArray(tree) ? tree[0] : tree)} 位家族成员.<br />\n        </div>\n        <div ref={tc => (this.treeContainer = tc)} className=\"tree-container\" onPointerDown={() => this.setState({tipID:0})}>\n          <MyTree\n            data={tree}\n            renderCustomNodeElement={\n              configurations.renderCustomNodeElement\n                ? rd3tProps => customNodeFnMapping[configurations.renderCustomNodeElement].fn(rd3tProps, configurations, this.setTipState, this.state.tipID)\n                : undefined\n            } //mixed svg\n            orientation={\"vertical\"}\n            translate={{ x: this.state.translateX, y: this.state.translateY }}\n            pathFunc={configurations.pathFunc} //step diagonal elbow straight\n            collapsible={configurations.collapsible}\n            initialDepth={configurations.initialDepth}\n            zoomable={configurations.zoomable}\n            zoom={configurations.zoom}\n            scaleExtent={configurations.scaleExtent}\n            nodeSize={configurations.nodeSize}\n            separation={configurations.separation}\n            enableLegacyTransitions={configurations.enableLegacyTransitions}\n            transitionDuration={configurations.transitionDuration}\n            depthFactor={configurations.depthFactor}\n            styles={configurations.styles}\n            shouldCollapseNeighborNodes={configurations.shouldCollapseNeighborNodes}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Viewer;\n","import React, {Component} from 'react';\nimport Editor from \"./components/Editor\";\n// Data\nimport data from './data/data.json';\nimport Viewer from \"./components/Viewer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      data\n    }\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"demo-container\">\n          <button title={'Edit'}\n                  onClick={this.toggleEditMode}/>\n          {this.state.editMode &&\n          <Editor data={this.state.data}\n                  onDataChange={newData => this.setState({data: newData})}/>}\n          <div className=\"column-right\">\n            <Viewer configurations={this.state.data.configurations} tree={this.state.data.tree}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  toggleEditMode() {\n    this.setState({editMode: !this.state.editMode})\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-tabs/style/react-tabs.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}